{"mappings":"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","sources":["src/js/storage.js","src/js/practice.js"],"sourcesContent":["const save = (key, value) => {\n    try {\n        const serializedState = JSON.stringify(value);  \n        localStorage.setItem(key, serializedState);\n    } catch (error) {\n        console.log(\"Set state error: \", error.message);\n    }\n}\n\nconst load = key => {\n    try {\n        const serializedState = localStorage.getItem(key);\n        return serializedState ? JSON.parse(serializedState) : undefined;\n    } catch (error) {\n        console.log(\"Set state error: \", error.message);\n    }\n}\n\nconst remove = key => {\n    try {\n        localStorage.removeItem(key)\n    } catch (error) {\n        console.log(\"Set state error: \", error.message);\n    }\n}\n\nexport {save, load, remove};","// <!-- async, await -->\n// FormData\nconst BASE_URL = 'https://restcountries.com/v3.1/name/';\n\nconst searchForm = document.querySelector('.js-search-country');\nconst addCountryBtn = document.querySelector('.js-add-country');\nconst countriesList = document.querySelector('.js-countries-list');\nconst formContainer = document.querySelector('.js-search-country-wrapper');\n\nconst markup = '<input type=\"text\" name=\"country\"/>'\n\naddCountryBtn.addEventListener('click', handlerAddInput)\nsearchForm.addEventListener('submit', handlerForm)\n\n\nfunction handlerAddInput() {\n  formContainer.insertAdjacentHTML('beforeend', markup)\n}\n\n\nfunction handlerForm(e) {\n  e.preventDefault();\n  console.dir(e.currentTarget);\n\n  const data = new FormData(e.currentTarget);\n  const arr = data.getAll('country').filter(item => item).map(item=>item.trim())\n\n  getCountries(arr)\n    .then(async resp => {\n      const capitals = resp.map(({ capital }) => capital[0]);\n      const weatherService = await getWeather(capitals);\n      console.log(weatherService);\n      countriesList.innerHTML = createWeatherMarkup(weatherService);\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      formContainer.innerHTML = markup;\n      searchForm.reset()\n    })\n}\n\nasync function getCountries(arr) {\n  const responses = arr.map(async item => {\n    const resp = await fetch(`${BASE_URL}${item}`);\n\n    if (!resp.ok) {\n      throw new Error('smth wrong')\n    }\n\n    return resp.json();\n  })\n\n  const data = await Promise.allSettled(responses);\n  const countryObj = data.filter(({ status }) => status === 'fulfilled').map(({ value }) => value[0]);\n  return countryObj;\n}\n\n\n\nasync function getWeather(arr) {\n    const BASE_URL = 'http://api.weatherapi.com/v1';\n    const API_KEY = '48d371ffaffe42768b2122056231907';\n\n  const resps = arr.map(async city => {\n    const resp = await fetch(`${BASE_URL}/current.json?key=${API_KEY}&q=${city}}`);\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  })\n      const data = await Promise.allSettled(resps);\n    const obj = data.filter(({ status }) => status === 'fulfilled').map(({ value }) => value);\n  console.log(obj);\n  return obj;\n}\n\n\nfunction createWeatherMarkup(arr) {\n  return arr.map(({ current:{temp_c, condition:{icon, text}}, location:{country, name}}) =>\n    `\n      <li>\n        <div>\n          <h3>${name}, ${country}</h3>\n          <img src=\"${icon}\" alt=\"${text}\" />\n          <p>${text}</p>\n          <p>${temp_c}&#8451</p>\n        </div>\n      </li>\n    `\n  ).join('')\n}\n\n// async function getCapital() {\n//   // in function\n//   try {\n//     const resp = await fetch(`${BASE_URL}Ukraine`);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText)\n//     }\n//     const data = await resp.json()\n//     console.log(data);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// }\n\n// getCapital()\n\n// async function getCapital() {\n//   // outside function\n//     const resp = await fetch(`${BASE_URL}Ukraine`);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText)\n//     }\n//     return resp.json()\n// }\n\n// getCapital().then(data=>console.log(data)).catch(err=>console.log(err))\n\n// async function getCapital() {\n\n//   // try {\n//     const arr = ['Ukraine', 'qwe', 'Germany'];\n//     const responses = arr.map(async country => {\n//       const resp = await fetch(`${BASE_URL}${country}`);\n//       // console.log(resp);\n//       if (!resp.ok) {\n//         throw new Error('Not found')\n//         // Promise.reject('Not found')\n//       } \n//       // –Ω–µ –ø—Ä–∞—Ü—é—î, –≤–∏–∫–∏–Ω–µ —É catch –∑ try...catch, –∞–ª–µ –Ω–µ –≤ catch –∑ then...catch, —Ç–æ–º—É –Ω–µ –≤–∏–∫ - —î–º–æ  try...catch\n//       return resp.json()\n//     })\n\n//     // console.log(responses);\n\n//     const proms = await Promise.allSettled(responses);\n//     return proms;\n// //  } catch (error) {\n// //   console.log(error);\n// //  }\n// }\n\n// getCapital()\n//   .then(data => {\n//     const res = data.filter(({ status }) => status === 'fulfilled').map(({value})=>value)\n//     const rej = data.filter(({ status }) => status === 'rejected')\n//     // console.log(res);  \n//   })\n//   .catch(err => console.log(err))\n\n// async function foo(){\n//   await Promise.reject(\"rejected\")\n//   return \"ok\"\n// }\n\n// foo().then(val=> console.log(val))\n// function getFruits(name) {\n//   const fruits = {\n//     strawberry: \"üçì\",\n//     kiwi: \"ü•ù\",\n//     peach:\"üçë\"\n//   }\n\n//   // return Promise.resolve(fruits[name]);\n//   return new Promise(resolve => setTimeout(() => resolve(fruits[name]), 500))\n  \n//   // return 5;\n// }\n\n// function makeSmoothie() {\n//   getFruits(\"peach\").then(fruit => {\n//     console.log(fruit)\n//     getFruits(\"kiwi\").then(fruit=>console.log(fruit))\n//   })\n// }\n// makeSmoothie()\n  \n// async function amakeSmoothie() {\n// try {\n//   console.time(\"stamp\");\n//   const peach =   getFruits(\"peach\");\n//   const kiwi =  getFruits(\"kiwi\");\n  \n//   const fruits = await Promise.all([peach,kiwi])\n\n//   console.log(\"fruits in async Promise.all\", fruits);\n\n//   console.timeEnd(\"stamp\");\n// } catch (error) {\n//   console.log(error);\n// }\n\n  \n// }\n\n// amakeSmoothie()\n// —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –≤–∏–∫-—Å—è —É –∑–æ–≤–Ω.–∫–æ–¥—ñ\n// const fetchUsers = async () => {\n//   try {\n//     const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n//     const users = await response.json();\n//     console.log(users);\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n\n// fetchUsers();\n\n// —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫-—Å—è —É –∑–æ–≤–Ω.–∫–æ–¥—ñ\n\n// const fetchUsers = async () => {\n//   const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n//   const users = await response.json();\n//   return users;\n// };\n\n// fetchUsers()\n//   .then(users => console.log(users))\n//   .catch(error => console.log(error));\n\n// —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫-—Å—è –≤ —ñ–Ω—à—ñ–π –∞—Å–∏–Ω—Ö—Ä —Ñ-—ñ—ó\n// const fetchUsers = async () => {\n//   const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n//   const users = await response.json();\n//   return users;\n// };\n\n// const doStuff = async () => {\n//   try {\n//     const users = await fetchUsers();\n//     console.log(users);\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n\n// doStuff();\n// –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏\n// const fetchUsers = async () => {\n//   const baseUrl = \"https://jsonplaceholder.typicode.com\";\n//   const firstResponse = await fetch(`${baseUrl}/users/1`);\n//   const secondResponse = await fetch(`${baseUrl}/users/2`);\n//   const thirdResponse = await fetch(`${baseUrl}/users/3`);\n\n//   const firstUser = await firstResponse.json();\n//   const secondUser = await secondResponse.json();\n//   const thirdUser = await thirdResponse.json();\n\n//   console.log(firstUser, secondUser, thirdUser);\n// };\n\n// fetchUsers();\n\n// –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∏\n// const fetchUsers = async () => {\n//   const baseUrl = \"https://jsonplaceholder.typicode.com\";\n//   const userIds = [1, 2, 3];\n\n//   // 1. –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ –ø—Ä–æ–º—ñ—Å—ñ–≤\n//   const arrayOfPromises = userIds.map(async userId => {\n//     const response = await fetch(`${baseUrl}/users/${userId}`);\n//     return response.json();\n//   });\n\n//   // 2. –ó–∞–ø—É—Å–∫–∞—î–º–æ —É—Å—ñ –ø—Ä–æ–º—ñ—Å–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ —ñ —á–µ–∫–∞—î–º–æ –Ω–∞ —ó—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è\n//   const users = await Promise.all(arrayOfPromises);\n//   console.log(users);\n// };\n\n// fetchUsers();\n\n// const fetchUsersBtn = document.querySelector(\".btn\");\n// const usersList = document.querySelector(\".users-list\");\n\n// fetchUsersBtn.addEventListener(\"click\", handlerFetchUsers);\n\n// async function handlerFetchUsers() {\n//   try {\n//     const users = await fetchUsers();\n//     renderUserListItems(users);\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// }\n\n// async function fetchUsers() {\n//   const baseUrl = \"https://jsonplaceholder.typicode.com\";\n//   const userIds = [1, 2, 3, 4, 5];\n\n//   const arrayOfPromises = userIds.map(async (userId) => {\n//     const response = await fetch(`${baseUrl}/users/${userId}`);\n//     return response.json();\n//   });\n\n//   const users = await Promise.all(arrayOfPromises);\n//   return users;\n// }\n\n// function renderUserListItems(users) {\n//   const markup = users\n//     .map(\n//       (user) => `<li class=\"item\">\n//         <p><b>Name</b>: ${user.name}</p>\n//         <p><b>Email</b>: ${user.email}</p>\n//         <p><b>Company</b>: ${user.company.name}</p>\n//       </li>`\n//     )\n//     .join(\"\");\n//   usersList.innerHTML = markup;\n// }\n\n// <!-- CRUD -->\n// –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ db.json\n\n// GET\n// const BASE_URL = 'http://localhost:4040/'\n\n// function fetchCars() {\n//   return fetch(`${BASE_URL}cars`).then(resp=>resp.json())\n// }\n\n// function fetchCarsById(bookId) {\n//   return fetch(`${BASE_URL}cars/${bookId}`).then(resp=>resp.json())\n// }\n\n\n// // POST\n// const newCar = {\n//       \"model\": \"my yellow VOLVO\",\n//       \"type\": \"any\",\n//       \"price\": \"norm\",\n//       \"img\": \"https://archibalds.co.nz/wp-content/uploads/2021/08/volvo-xc90-1920x760-1.jpg\"\n// }\n\n// function addCar(newCar) {\n//   const options = {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-Type\":\"application/json\"\n//   },\n//   body: JSON.stringify(newCar)\n// }\n\n//     return fetch(`${BASE_URL}cars/`, options).then(resp=>resp.json())\n// }\n\n// // addCar(newCar).then(renderCar)\n\n// function renderCar(car) {\n//   console.log(car);\n//   console.log('ok');\n// }\n\n\n// // PATCH\n\n// const carToUpd = {\n//       \"model\": \"Sergio yellow VOLVO\",\n//       \"price\": \"norm\",\n//       \"img\": \"https://archibalds.co.nz/wp-content/uploads/2021/08/volvo-xc90-1920x760-1.jpg\"\n// }\n\n// function updateCarById(carId, update) {\n//   const options = {\n//   method: \"PATCH\",\n//   headers: {\n//     \"Content-Type\":\"application/json\"\n//   },\n//   body: JSON.stringify(update)\n// }\n\n//     return fetch(`${BASE_URL}cars/${carId}`, options).then(resp=>resp.json())\n// }\n\n// // updateCarById(11, carToUpd).then(renderCar);\n// // updateCarById(11, { price: 20000 }).then(renderCar);\n\n// function renderCar(car) {\n//   console.log(car);\n//   console.log('ok');\n// }\n\n// // DELETE\n\n// function delteCarById(carId) {\n//   const options = {\n//   method: \"DELETE\"\n// }\n\n//     return fetch(`${BASE_URL}cars/${carId}`, options).then(resp=>resp.json())\n// }\n\n// delteCarById(8)\n// delteCarById(9)\n// delteCarById(10)\n// delteCarById(12)\n\n// const postId = 1;\n\n// fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)\n//   .then(response => response.json())\n//   .then(post => console.log(post))\n//   .catch(error => console.log(error));\n\n//   const postToAdd = {\n//   author: \"Mango\",\n//   body: \"CRUD is awesome\",\n// };\n\n\n// const options = {\n//   method: \"POST\",\n//   body: JSON.stringify(postToAdd),\n//   headers: {\n//     \"Content-Type\": \"application/json; charset=UTF-8\",\n//   },\n// };\n\n// fetch(\"https://jsonplaceholder.typicode.com/posts\", options)\n// //   .then(response => response.json())\n// //   .then(post => console.log(post))\n// //   .catch(error => console.log(error));\n\n\n\n//   const postToUpdate = {\n//   id: 1,\n//   body: \"CRUD is really awesome\",\n// };\n\n// const options = {\n//   method: \"PATCH\",\n//   body: JSON.stringify(postToUpdate),\n//   headers: {\n//     \"Content-Type\": \"application/json; charset=UTF-8\",\n//   },\n// };\n\n// fetch(`https://jsonplaceholder.typicode.com/posts/${postToUpdate.id}`, options)\n//   .then(response => response.json())\n//   .then(post => console.log(post))\n//   .catch(error => console.log(\"ERROR\" + error));\n\n\n//   const postIdToDelete = 1;\n\n// fetch(`https://jsonplaceholder.typicode.com/posts/${postIdToDelete}`, {\n//   method: \"DELETE\",\n// })\n//   .then(() => console.log(\"Post deleted\"))\n//   .catch(error => console.log(\"Error:\", error));\n\n\n\n//  <!-- pagination -->\n// const fetchPostsBtn = document.querySelector(\".btn\");\n// const userList = document.querySelector(\".posts\");\n// const alertPopup = document.querySelector(\".alert\");\n// let isAlertVisible = false;\n\n// // Controls the group number\n// let page = 1;\n// // Controls the number of items in the group\n// let limit = 20;\n// // In our case total number of pages is calculated on frontend\n// const totalPages = 50 / limit;\n\n// fetchPostsBtn.addEventListener(\"click\", () => {\n//   // Check the end of the collection to display an alert\n//   if (page > totalPages) {\n//     return toggleAlertPopup();\n//   }\n\n//   fetchPosts()\n//     .then((posts) => {\n//       renderPosts(posts);\n//       // Increase the group number\n//       page += 1;\n\n//       // Replace button text after first request\n//       if (page > 1) {\n//         fetchPostsBtn.textContent = \"Fetch more posts\";\n//       }\n//     })\n//     .catch((error) => console.log(error));\n// });\n\n// function fetchPosts() {\n//   const params = new URLSearchParams({\n//     _limit: limit,\n//     _page: page\n//   });\n\n//   return fetch(`https://jsonplaceholder.typicode.com/posts?${params}`).then(\n//     (response) => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     }\n//   );\n// }\n\n// function renderPosts(posts) {\n//   const markup = posts\n//     .map(({ id, title, body, userId }) => {\n//       return `<li>\n//           <h2 class=\"post-title\">${title.slice(0, 30)}</h2>\n//           <p><b>Post id</b>: ${id}</p>\n//           <p><b>Author id</b>: ${userId}</p>\n//           <p class=\"post-body\">${body}</p>\n//         </li>`;\n//     })\n//     .join(\"\");\n//   userList.insertAdjacentHTML(\"beforeend\", markup);\n// }\n\n// function toggleAlertPopup() {\n//   if (isAlertVisible) {\n//     return;\n//   }\n//   isAlertVisible = true;\n//   alertPopup.classList.add(\"is-visible\");\n//   setTimeout(() => {\n//     alertPopup.classList.remove(\"is-visible\");\n//     isAlertVisible = false;\n//   }, 3000);\n// }\n\n// <!-- fetch -->\n// const fetchUsersBtn = document.querySelector(\".btn\");\n// const userList = document.querySelector(\".user-list\");\n\n// fetchUsersBtn.addEventListener(\"click\", () => {\n//   fetchUsers()\n//     .then((users) => renderUserList(users))\n//     .catch((error) => console.log(error));\n// });\n\n// const searchParams = new URLSearchParams({\n//   _limit: 5,\n//   _sort: \"name\",\n// });\n\n// // console.log(searchParams.toString());\n// const url = `https://jsonplaceholder.typicode.com/users?${searchParams}`;\n// // console.log(url); // \"https://jsonplaceholder.typicode.com/users?_limit=5&_sort=name\"\n\n// // –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ä—è–¥–∫–∞ –∑–∞–ø–∏—Ç—É\n// function fetchUsers() {\n//   return fetch(\n//     \"https://jsonplaceholder.typicode.com/users?_limit=7&_sort=name\"\n//   ).then((response) => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   });\n// }\n\n// function fetchUsers() {\n//   return fetch(\"https://jsonplaceholder.typicode.com/users\").then(\n//     (response) => {\n//       if (!response.ok) {\n//         throw new Error(response.status);\n//       }\n//       return response.json();\n//     }\n//   );\n// }\n\n// function renderUserList(users) {\n//   const markup = users\n//     .map((user) => {\n//       return `<li>\n//           <p><b>Name</b>: ${user.name}</p>\n//           <p><b>Email</b>: ${user.email}</p>\n//           <p><b>Company</b>: ${user.company.name}</p>\n//         </li>`;\n//     })\n//     .join(\"\");\n//   userList.innerHTML = markup;\n// }\n// // <!-- ipodrom -->\n// const horses = ['bisquit', 'milkshake', 'cappuchino', 'moti', 'macaroon'];\n\n// const startBtnRace = document.querySelector('.js-race-btn');\n// const winnerOutput = document.querySelector('.js-winner');\n// const progressOutput = document.querySelector('.js-progress');\n// const tableBody = document.querySelector('.js-results-table');\n\n// let raceCounter = 0;\n\n// // startBtnRace.addEventListener('click', onStartRaceClick)\n\n\n// function onStartRaceClick() {\n//     raceCounter += 1;\n//     const promises = horses.map(run);\n\n//     updateWinnerOutput(\"\");\n//     updateProgressOutput('üöÄ –ü–æ—á–∞—Ç–æ–∫ –∑–∞—ó–∑–¥—É, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è');\n//     determineWinner(promises);\n//     waitForAll(promises);\n// }\n\n\n// function determineWinner(horsesP) {\n//     Promise.race(horsesP).then(({ horse, time }) => {\n//         updateWinnerOutput(`ü•á –ü–µ—Ä–µ–º—ñ–≥ ${horse}, —Ñ—ñ–Ω—ñ—à—É–≤–∞–≤—à–∏ –∑–∞ ${time}`);\n//         updateResultsTable({ horse, time, raceCounter });\n//     });\n// }\n\n// function waitForAll(horsesP) {\n//         Promise.all(horsesP).then(() => updateProgressOutput('üí∞ –ö—ñ–Ω–µ—Ü—å –∑–∞—ó–∑–¥—É, —Å—Ç–∞–≤–∫–∏ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è'));\n//     }\n\n// function updateProgressOutput(message) {\n//     progressOutput.textContent = message;\n// }\n\n// function updateWinnerOutput(message) {\n//     winnerOutput.textContent = message;\n// }\n\n// function updateResultsTable({ horse, time, raceCounter }) {\n//     const tr =\n//         `<tr>\n//             <td>${raceCounter}</td>\n//             <td>${horse}</td>\n//             <td>${time}</td>\n//         </tr>\n//         `;\n    \n//     tableBody.insertAdjacentHTML('beforeend', tr)\n// }\n\n// function run(horse) {\n//     return new Promise((res) => {\n//         const time = getRandomTime(2000, 3500);\n\n//         setTimeout(() => {\n//             res({horse, time})\n//         }, time)\n//     })\n// }\n\n// function getRandomTime(min, max) {\n//     return Math.floor(Math.random() * (max - min + 1) + min);\n// }\n\n\n// –±–µ–∑ —Ç–∞–±–ª–∏—Ü—ñ\n// console.log(\n//     '%c üöÄ –ü–æ—á–∞—Ç–æ–∫ –∑–∞—ó–∑–¥—É, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è',\n//     'color:red;'\n// );\n\n// run('bisquit').then(x => console.log(x)).catch(e => console.log(e));\n\n// const promises = horses.map(horse => run(horse).then(x => console.log(x)).catch(e => console.log(e)));\n// const promises = horses.map(run);\n\n// Promise.race(promises).then(({horse, time}) => console.log(\n//     `%c ü•á –ü–µ—Ä–µ–º—ñ–≥ ${horse}, —Ñ—ñ–Ω—ñ—à—É–≤–∞–≤—à–∏ –∑–∞ ${time}`,\n//     'color:green;'\n// ));\n\n// Promise.all(promises).then(()=> console.log(\n//     '%c üí∞ –ö—ñ–Ω–µ—Ü—å –∑–∞—ó–∑–¥—É, —Å—Ç–∞–≤–∫–∏ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è',\n//     'color:blue;'))\n// –±–µ–∑ —Ç–∞–±–ª–∏—Ü—ñ\n\n// function run(horse) {\n//     return new Promise((res) => {\n//         const time = getRandomTime(2000, 3500);\n\n//         setTimeout(() => {\n//             res({horse, time})\n//         }, time)\n//     })\n// }\n\n// function getRandomTime(min, max) {\n//     return Math.floor(Math.random() * (max - min + 1) + min);\n// }\n\n\n\n\n\n// <!-- promise -->\n// const start = document.querySelector(\".js-game-start\");\n// const container = document.querySelector(\".js-game-container\"); \n\n// start.addEventListener('click', onStart)\n\n// // allSettled\n\n// function onStart() {\n//     let counter = 0;\n\n//     [...container.children].forEach((item) => {\n//         item.textContent = \"\"\n//     });\n\n//     const promises = [...container.children].map(() => createPromise());\n//     Promise.allSettled(promises)\n//         .then(items => {\n//             console.log(items);\n//             items.forEach((item, i) => {\n\n//                 setTimeout(() => {\n//                     if (item.status === 'fulfilled') {\n//                         counter += 1;\n//                     }\n//                     container.children[i].textContent = item.value || item.reason;\n\n//                     if (i === container.children.length - 1) {\n//                         setTimeout(() => {\n//                             if (counter === container.children.length) {\n//                                 alert('100$ today - yes');\n//                             } else {\n//                                 alert('100$ today - no');\n//                             }\n//                         }, 500)\n//                     }\n//                 }, i * 1000)\n                \n//             })\n//         })\n    \n\n// }\n\n// function createPromise() {\n//     return new Promise((res, rej) => {\n//             const random = Math.random();\n\n//             if (random > 0.5) {\n//                 res('üí∞');\n//             } else {\n//                 rej('üí©')\n//             }\n\n//     })\n// }\n\n// function onStart() {\n//     const result = [];\n\n//     [...container.children].forEach((item) => {\n//         item.textContent = \"\"\n//     });\n\n//     [...container.children].forEach((item, i) => {\n//         createPromise(i)\n//             .then((smile) => {\n//                 item.textContent = smile;\n//                 result.push('1')\n//             })\n//             .catch((smile) => {\n//                 item.textContent = smile;\n//             })\n//             .finally(() => {\n//                 setTimeout(() => {\n//                     if (i === container.children.length - 1) {\n//                         if (result.length === 3) {\n//                             alert('100$ today - yes');\n//                         } else {\n//                             alert('100$ today - no');\n//                         }                   \n//                     }\n//                 }, 1000)\n//             })\n//     })\n// }\n\n// function createPromise(delay) {\n//     return new Promise((res, rej) => {\n//         setTimeout(() => {\n//             const random = Math.random();\n\n//             if (random > 0.5) {\n//                 res('üí∞');\n//             } else {\n//                 rej('üí©')\n//             }\n//         }, 500 * delay)\n//     })\n// }\n\n// const pr = new Promise((resolve) => {\n//     resolve(5)\n// })\n\n// pr.then(value => {\n//     return new Promise(resolve => {\n//         resolve(value * 2);\n//     })\n// }).then(value=>console.log(value))\n// \n\n// const makePromise = (text, delay) => {\n//   return new Promise(resolve => {\n//     setTimeout(() => resolve(text), delay);\n//   });\n// };\n\n// const promiseA = makePromise(\"promiseA value\", 1000);\n// const promiseB = makePromise(\"promiseB value\", 3000);\n\n// Promise.race([promiseA, promiseB])\n//   .then(value => console.log(value)) // \"promiseA value\"\n//     .catch(error => console.log(error));\n  \n// \n\n// const makePromise = (text, delay) => {\n//   return new Promise(resolve => {\n//     setTimeout(() => resolve(text), delay);\n//   });\n// };\n\n// const promiseA = makePromise(\"promiseA value\", 1000);\n// const promiseB = makePromise(\"promiseB value\", 3000);\n\n// Promise.all([promiseA, promiseB])\n//   .then(value => console.log(value)) //[\"promiseA value\", \"promiseB value\"]\n//     .catch(error => console.log(error));\n  \n// \n\n// const fetchUserFromServer = username => {\n//   return new Promise((resolve, reject) => {\n//     console.log(`Fetching data for ${username}`);\n\n//     setTimeout(() => {\n\n//       const isSuccess = true;\n\n//       if (isSuccess) {\n//         resolve(\"success value\");\n//       } else {\n//         reject(\"error\");\n//       }\n//     }, 2000);\n//   });\n// };\n\n// fetchUserFromServer(\"Mango\")\n//     .then(user => console.log(user))\n//     .catch(error => console.error(error));\n  \n\n// \n\n// const fetchUserFromServer = (username, onSuccess, onError) => {\n//   console.log(`Fetching data for ${username}`);\n\n//   setTimeout(() => {\n//     const isSuccess = true;\n\n//     if (isSuccess) {\n//       onSuccess(\"success value\");\n//     } else {\n//       onError(\"error\");\n//     }\n//   }, 5000);\n// };\n\n// const onFetchSuccess = user => {\n//   console.log(user);\n// };\n\n// const onFetchError = error => {\n//   console.error(error);\n// };\n\n// fetchUserFromServer(\"Mango\", onFetchSuccess, onFetchError);\n\n// \n// const isSuccess = true;\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//         resolve(\"Success! Value passed to resolve function\");\n\n//     } else {\n//         reject(\"Error! Error passed to reject function\");\n\n//     }\n//   }, 2000);\n// });\n\n// console.log(\"Before promise.then()\");\n\n// promise.then(onResolve).catch(onReject).finally(onSettled);\n\n// function onResolve(value) {\n//     console.log(\"onResolve call inside promise.then()\");\n//     console.log(value);\n// }\n\n// function onReject(error) {\n//     console.log(\"onReject call inside promise.then()\");\n//     console.log(error);\n// }\n\n// function onSettled() {\n//     console.log('promise settled - fulfilled or rejected');\n// }\n\n// console.log(\"After promise.then()\");\n\n// <!-- calendar -->\nconst day = document.querySelector(\".date-day\");\nconst date = document.querySelector(\".date\");\nconst month = document.querySelector(\".date-month\");\nconst year = document.querySelector(\".date-year\");\nconst digitalClock = document.querySelector(\".digital-clock\");\nconst arrowSecond = document.querySelector(\".clock-seconds__arrow\");\nconst arrowMinutes = document.querySelector(\".clock-minutes__arrow\");\nconst arrowHours = document.querySelector(\".clock-hours__arrow\");\n\nconst namesOfMonth = [\"–°—ñ—á–µ–Ω—å\", \"–õ—é—Ç–∏–π\", \"–ë–µ—Ä–µ–∑–µ–Ω—å\", \"–ö–≤—ñ—Ç–µ–Ω—å\", \"–¢—Ä–∞–≤–µ–Ω—å\", \"–ß–µ—Ä–≤–µ–Ω—å\", \"–õ–∏–ø–µ–Ω—å\", \"–°–µ—Ä–ø–µ–Ω—å\", \"–í–µ—Ä–µ—Å–µ–Ω—å\",\n    \"–ñ–æ–≤—Ç–µ–Ω—å\",  \"–õ–∏—Å—Ç–æ–ø–∞–¥\", \"–ì—Ä—É–¥–µ–Ω—å\",];\n\nconst arrDay = [\"–ù–µ–¥—ñ–ª—è\",  \"–ü–æ–Ω–µ–¥—ñ–ª–æ–∫\",  \"–í—ñ–≤—Ç–æ—Ä–æ–∫\",  \"–°–µ—Ä–µ–¥–∞\",  \"–ß–µ—Ç–≤–µ—Ä\",  \"–ü`—è—Ç–Ω–∏—Ü—è\",  \"–°—É–±–æ—Ç–∞\",];\n\n// setInterval(() => {\n//     const currentTime = new Date();\n//     const currentDay = arrDay[currentTime.getDay()];\n//     const currentDate = currentTime.getDate();\n//     const currentMonth = namesOfMonth[currentTime.getMonth()];\n//     const currentYear = currentTime.getFullYear();\n//     const currentHour = currentTime.getHours();\n//     const currentMins = currentTime.getMinutes();\n//     const currentSecs = currentTime.getSeconds();\n\n//     const changeSeconds = (360 / 60) * currentSecs;\n//     const changeMinutes = (360 / 60) * currentMins;\n//     const changeHours = (360 / 12) * currentHour + (360 / 12 / 60) * currentMins;\n\n//     const formatTime = `${currentHour.toString().padStart(2, '0')}:${currentMins.toString().padStart(2, '0')}:${currentSecs.toString().padStart(2, '0')}`\n//     digitalClock.textContent = formatTime;\n\n//     day.textContent = currentDay;\n//     date.textContent = currentDate;\n//     month.textContent = currentMonth;\n//     year.textContent = currentYear;\n\n//     arrowSecond.style.transform = `rotate(${changeSeconds}deg)`;\n//     arrowMinutes.style.transform = `rotate(${changeMinutes}deg)`;\n//     arrowHours.style.transform = `rotate(${changeHours}deg)`;\n\n// }, 1000)\n\n\n\n\n\n\n\n// <!-- notification -->\nconst POPUP_DELAY = 3000;\nlet timeOutId = null;\nconst popUp = document.querySelector('.js-alert');\npopUp.addEventListener('click', onPopUpClick);\n\n// showPopUp()\n\nfunction onPopUpClick() {\n    console.log('click');\n    hidePopUp();\n    clearTimeout(timeOutId);\n}\n\n\n\nfunction showPopUp() {\n    popUp.classList.add('is-visible');\n\n    timeOutId = setTimeout(() => {\n        hidePopUp();\n        console.log('close');\n    }, POPUP_DELAY)\n}\n\n\nfunction hidePopUp() {\n    popUp.classList.remove('is-visible');\n}\n\n// <!-- –¥–∞—Ç–∞ -->\n// const date = new Date();\n\n// console.log('date:', date);\n// console.log('date.getTime:', date.getTime());\n// console.log(\"getDate(): \", date.getDate());\n// console.log(\"getUTCDate(): \", date.getUTCDate());\n\n// console.log(date.getMonth());\n// const months = ['—Å—ñ—á–µ–Ω—å', '–ª—é—Ç–∏–π', '–±–µ—Ä–µ–∑–µ–Ω—å', '–∫–≤—ñ—Ç–µ–Ω—å', '—Ç—Ä–∞–≤–µ–Ω—å', '—á–µ—Ä–≤–µ–Ω—å', '–ª–∏–ø–µ–Ω—å', '—Å–µ—Ä–ø–µ–Ω—å', '–≤–µ—Ä–µ—Å–µ–Ω—å', '–∂–æ–≤—Ç–µ–Ω—å', '–ª–∏—Å—Ç–æ–ø–∞–¥', '–≥—Ä—É–¥–µ–Ω—å'];\n\n// console.log(months[date.getMonth()]);\n\n// console.log(date.getDay());\n// const days = ['–Ω–µ–¥—ñ–ª—è', '–ø–æ–Ω–µ–¥—ñ–ª–æ–∫', '–≤—ñ–≤—Ç–æ—Ä–æ–∫', '—Å–µ—Ä–µ–¥–∞', '—á–µ—Ç–≤–µ—Ä', '–ø\\'—è—Ç–Ω–∏—Ü—è', '—Å—É–±–æ—Ç–∞'];\n// console.log(days);\n// console.log(days[date.getDay()]);\n\n// <!-- —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ -->\nconst startBtn = document.querySelector(\".js-start\");\nconst stopBtn = document.querySelector(\".js-stop\");\nlet timerId = null;\n\nstartBtn.addEventListener(\"click\", () => {\n    console.log(`Interval with id ${timerId} has started!`);\n    timerId = setInterval(() => {\n    console.log(`I love async JS!  ${Math.random()}`);\n  }, 1000);\n});\n\n\nstopBtn.addEventListener(\"click\", () => {\n  clearInterval(timerId);\n  console.log(`Interval with id ${timerId} has stopped!`);\n});\n\n//  <!-- —Ç–∞–π–º–µ—Ä–∏ -->\n\nconst box = document.querySelector('.js-box');\nconst timerOutput = document.querySelector('.js-timer');\nlet counter = 6;\nlet intervalId = null;\n\n// setTimeout(() => {\n//     box.style.display = 'block';\n\n//     intervalId = setInterval(() => {\n//         counter -= 1;\n//         timerOutput.textContent = `–†–µ–∫–ª–∞–º–∞ –∑–Ω–∏–∫–Ω–µ —á–µ—Ä–µ–∑: ${counter}`;\n        \n\n//         if (!counter) {\n//             console.log('close');\n//             clearInterval(intervalId);\n//             timerOutput.addEventListener('click', ()=>{box.style.display = 'none'})\n//             timerOutput.textContent = 'X'\n//             // box.style.display = 'none';\n//         }\n//     }, 1000)\n\n// }, 3000)\n\nconst button = document.querySelector(\"button\");\n\nconst onClick = () => {\n    setTimeout(() => alert('Async Hello'), 2000)\n}\n\n// button.addEventListener(\"click\", onClick);\n\n\nconst greet = () => {\n  console.log(\"Hello!\");\n};\n\n// const timerId = setTimeout(greet, 2000);\n// clearTimeout(timerId)\n\n\n// <!-- message in localStorage -->\nimport { save, load, remove } from \"./storage\"\n\nconst form = document.querySelector(\"#message-form\");\nconst output = document.querySelector(\"#output\");\nconst LOCALSTORAGE_KEY = \"user-message\";\nconst clearBtn = document.querySelector(\"#clearBtn\");\n\n\nupdOutputfromLocalStorage();\nform.addEventListener(\"submit\", saveMessage);\nclearBtn.addEventListener('click', clearLocalStorage)\n\n\nfunction saveMessage(e) {\n    e.preventDefault();\n\n    const message = form.elements.message.value;\n\n    // localStorage.setItem(LOCALSTORAGE_KEY, message);\n    save(LOCALSTORAGE_KEY, message)\n    updOutputfromLocalStorage();\n    form.reset();\n}\n\nfunction updOutputfromLocalStorage() {\n    // output.textContent = localStorage.getItem(LOCALSTORAGE_KEY) || \"\";\n    output.textContent = load(LOCALSTORAGE_KEY);\n}\n\nfunction clearLocalStorage() {\n    remove(LOCALSTORAGE_KEY);\n}\n\n\n// <!--------------------------------------------------------------------->\n\n// const data = JSON.parse(\"Well, this is awkward\");\n// console.log(\"‚ùå You won't see this log\");\n\n// try {\n//     const data = JSON.parse(\"Well, this is awkward\");\n//     console.log(\"‚ùå You won't see this log\");\n// } catch (error) {\n//     console.log(\"‚úî You see this log\");\n//     console.log(error.name);\n//     console.log(error.message);\n//     console.log(error.stack);\n// }\n\n// console.log('This message will not appear in the console');\n\n// cos value = 5;\n\n// const settings = {\n//   theme: \"dark\",\n//   isAuthenticated: true,\n//   options: [1, 2, 3],\n// };\n\n// localStorage.setItem(\"settings\", JSON.stringify(settings));\n\n// const savedSettings = localStorage.getItem(\"settings\");\n// console.log(typeof savedSettings);\n\n// const parsedSettings = JSON.parse(savedSettings)\n// console.log(typeof parsedSettings);\n\n// localStorage.removeItem(\"settings\");\n// localStorage.removeItem('theme')"],"names":["$3fff5e8daf4b13a6$export$a1544dad697b423d","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","log","message","$3fff5e8daf4b13a6$export$11e63f7b0f3d9900","getItem","parse","undefined","$3fff5e8daf4b13a6$export$cd7f480d6b8286c3","removeItem","$b4e0b91da62993e1$var$searchForm","document","querySelector","$b4e0b91da62993e1$var$addCountryBtn","$b4e0b91da62993e1$var$countriesList","$b4e0b91da62993e1$var$formContainer","addEventListener","insertAdjacentHTML","e","preventDefault","dir","currentTarget","data","FormData","async","arr","responses","map","item","resp","fetch","ok","Error","json","Promise","allSettled","filter","status","$b4e0b91da62993e1$var$getCountries","getAll","trim","then","capitals","capital","weatherService","BASE_URL1","API_KEY","resps","city","statusText","obj","$b4e0b91da62993e1$var$getWeather","innerHTML","current","temp_c","condition","icon","text","location","country","name","join","$b4e0b91da62993e1$var$createWeatherMarkup","catch","err","finally","reset","$b4e0b91da62993e1$var$timeOutId","$b4e0b91da62993e1$var$popUp","$b4e0b91da62993e1$var$hidePopUp","classList","remove","clearTimeout","$b4e0b91da62993e1$var$startBtn","$b4e0b91da62993e1$var$stopBtn","$b4e0b91da62993e1$var$timerId","setInterval","Math","random","clearInterval","$b4e0b91da62993e1$var$form","$b4e0b91da62993e1$var$output","$b4e0b91da62993e1$var$clearBtn","$b4e0b91da62993e1$var$updOutputfromLocalStorage","textContent","elements"],"version":3,"file":"practice.5f1e8575.js.map"}