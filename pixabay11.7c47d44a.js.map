{"mappings":"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","sources":["src/js/pixabay11.js"],"sourcesContent":["import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport Notiflix from 'notiflix';\nimport axios from \"axios\";\n\nconst searchForm = document.querySelector('#search-form');\nconst submitBtn = searchForm.querySelector('button');\nconst galleryList = document.querySelector('.js-gallery');\nconst loader = document.querySelector('.loader');\nconst loadMoreTextOutput = document.querySelector('.js-load-more-wrapper');\nconst target = document.querySelector('.js-guard');\nconst btnToTop = document.querySelector('.js-button-up');\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '38382383-be68f6f97c97ff697813dafa9';\n\n\nconst observerOptions = {\n    root: null,\n    rootMargin: '200px',\n    threshold: 1.0\n}\n\nconst scrollObserverOptions = {\n    root: null,\n    rootMargin: '200px',\n    threshold: 1.0\n}\n\nNotiflix.Notify.init({\n    clickToClose: true,\n    timeout: 2000,\n})\n\nlet searchQuery = \"\";\nlet currentPage = 1;\nlet currentResults = 0;\nhideLoader();\n\nsearchForm.addEventListener('submit', handlerSearchForm);\nbtnToTop.addEventListener('click', handlerReturnToTop)\nconst observer = new IntersectionObserver(observe, observerOptions);\nconst scrollObserver = new IntersectionObserver(scrollObserve, scrollObserverOptions);\n\n\nfunction handlerSearchForm(e) {\n    e.preventDefault();\n    hideLoadMoreErrorText();\n    showLoader();\n    hideSubmitBtn();\n    galleryList.innerHTML = \"\";\n\n    currentPage = 1;\n    searchQuery = searchForm.elements.searchQuery.value;\n\n    fetchImg(searchQuery, currentPage)\n        .then(({ total, hits, totalHits }) => {\n\n            if (!total) {\n                showErrorNotification('Sorry, there are no images matching your search query. Please try again.')\n                return;\n            } else {\n                showSuccessNotification(`Hooray! We found ${totalHits} images.`)\n            }\n\n            currentResults = hits.length;\n            if (currentResults === totalHits) {\n                showLoadMoreErrorText();\n                } \n                \n            currentPage += 1;\n            galleryList.innerHTML = createGalleryMarkup(hits);\n            imgModalInit();\n            \n            const scrollTarget = document.querySelector('.js-scroll-guard');\n            observer.observe(target);\n            scrollObserver.observe(scrollTarget);\n        })\n        .catch(error => showErrorNotification(error))\n        .finally(()=>{\n            hideLoader();\n            showSubmitBtn();\n        })\n}\n\nfunction onLoadMore() {\n    hideLoadMoreErrorText();\n    showLoader();\n\n    fetchImg(searchQuery, currentPage)\n        .then(({ hits, totalHits }) => {\n            \n            currentPage += 1;\n            currentResults += hits.length;\n\n            if (currentResults === totalHits) {\n                observer.unobserve(target);\n                showLoadMoreErrorText();\n            }\n            \n            galleryList.insertAdjacentHTML('beforeend', createGalleryMarkup(hits));\n            imgModalInit();\n            \n        })\n        .catch(error => showErrorNotification(error))\n        .finally(hideLoader)\n}\n\n\nasync function fetchImg(searchQuery, page) {\n    const params = new URLSearchParams({\n        key:API_KEY,\n        q: searchQuery,\n        per_page: 40,\n        page,\n        image_type:'photo',\n        orientation:'horizontal',\n        safesearch: true,\n    })\n\n    try {\n        const response = await axios.get(`${BASE_URL}/?${params}`);\n        return response.data;\n    } catch (error) {\n        error => showErrorNotification(error.message);\n    }\n}\n\nfunction createGalleryMarkup(arr) {\n    return arr.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => \n    `\n    <a href=\"${largeImageURL}\" class=\"photo-link js-scroll-guard\" >\n        <div class=\"photo-card\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"350\" height=\"225\"/>\n        </div>\n        <div class=\"info\">\n            <p class=\"info-item\">\n            <b>Likes</b>\n            <span>${likes}</span>\n            </p>\n            <p class=\"info-item\">\n            <b>Views</b>\n            <span>${views}</span>\n            </p>\n            <p class=\"info-item\">\n            <b>Comments</b>\n            <span>${comments}</span>\n            </p>\n            <p class=\"info-item\">\n            <b>Downloads</b>\n            <span>${downloads}</span>\n            </p>\n        \n    </div>\n    </a>\n\n    `).join('')\n}\n\nfunction imgModalInit() {\n    const lightboxGallery = new SimpleLightbox('.gallery a').refresh();\n}\n\nfunction showLoadMoreErrorText() {\n    loadMoreTextOutput.classList.remove('is-hidden');\n}\n\nfunction hideLoadMoreErrorText() {\n    loadMoreTextOutput.classList.add('is-hidden');\n}\n\nfunction hideLoader() {\n    loader.classList.add('is-hidden');\n}\n\nfunction showLoader() {\n    loader.classList.remove('is-hidden');\n}\n\nfunction showErrorNotification(message) {\n    Notiflix.Notify.failure(message)\n}\n\nfunction showSuccessNotification(message) {\n    Notiflix.Notify.success(message);\n}\n\nfunction observe (entries) {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            onLoadMore()\n        }\n     })\n};\n\nfunction showSubmitBtn() {\n    submitBtn.disabled = false;\n}\n\nfunction hideSubmitBtn() {\n    submitBtn.disabled = true;\n}\n\nfunction handlerReturnToTop() {\n    window.scrollTo({\n    top: 0,\n    behavior: 'smooth'\n    });\n    \n    hideScrollToTopBtn()\n}\n\nfunction showScrollToTopBtn() {\n    btnToTop.classList.remove('is-hidden');\n}\n\nfunction hideScrollToTopBtn() {\n    btnToTop.classList.add('is-hidden')\n}\n\nfunction scrollObserve(entries) {\n    if (!entries[0].isIntersecting) {\n        showScrollToTopBtn()\n    } else {\n        hideScrollToTopBtn()\n    }\n};\n\n// LOAD MORE BTN ------------------------------------------------------------------------------------------------\n\n// import SimpleLightbox from \"simplelightbox\";\n// import \"simplelightbox/dist/simple-lightbox.min.css\";\n// import Notiflix from 'notiflix';\n// import axios from \"axios\";\n\n// Notiflix.Notify.init({\n//     clickToClose: true,\n//     timeout: 2000,\n// })\n\n\n// const searchForm = document.querySelector('#search-form');\n// const galleryList = document.querySelector('.js-gallery');\n// const loader = document.querySelector('.loader');\n// const loadMoreBtn = document.querySelector('.js-load-more');\n// const loadMoreTextOutput = document.querySelector('.js-load-more-text');\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '38382383-be68f6f97c97ff697813dafa9';\n\n\n// let searchQuery = \"\";\n// let currentPage = 1;\n// let allHits = 0;\n// hideLoader();\n\n// searchForm.addEventListener('submit', handlerSearchForm);\n// loadMoreBtn.addEventListener('click', handlerLoadMore);\n\n\n// function handlerSearchForm(e) {\n//     e.preventDefault();\n//     hideLoadMoreErrorText();\n//     showLoader();\n//     galleryList.innerHTML = \"\";\n\n//     currentPage = 1;\n//     searchQuery = searchForm.elements.searchQuery.value;\n\n//     fetchImg(searchQuery, currentPage)\n//         .then(({ total, hits, totalHits }) => {\n\n//             if (!total) {\n//                 hideLoadMoreBtn();\n//                 showErrorNotification('Sorry, there are no images matching your search query. Please try again.')\n//                 return;\n//             } else {\n//                 showSuccessNotification(`Hooray! We found ${totalHits} images.`)\n\n//             allHits = hits.length;\n//             if (allHits === totalHits) {\n//                 hideLoadMoreBtn()\n//                 showLoadMoreErrorText();\n//             } else {\n//                 showLoadMoreBtn()\n//             }\n//         }\n            \n//             currentPage += 1;\n\n//             galleryList.innerHTML = createGalleryMarkup(hits);\n//             imgModalInit()\n\n//         })\n//         .catch(error => showErrorNotification(error))\n//         .finally(hideLoader)\n// }\n\n// function handlerLoadMore() {\n//     hideLoadMoreErrorText();\n//     showLoader();\n\n//     fetchImg(searchQuery, currentPage)\n//         .then(({ hits, totalHits }) => {\n            \n//             currentPage += 1;\n//             allHits += hits.length;\n\n//             if (allHits === totalHits ) {\n//                 hideLoadMoreBtn()\n//                 showLoadMoreErrorText();\n//             }\n            \n\n//             galleryList.insertAdjacentHTML('beforeend', createGalleryMarkup(hits));\n//             smoothScroll()\n//             imgModalInit()\n            \n//         })\n//         .catch(error => showErrorNotification(error))\n//         .finally(hideLoader)\n// }\n\n\n// async function fetchImg(searchQuery, page) {\n//     const params = new URLSearchParams({\n//         key:API_KEY,\n//         q: searchQuery,\n//         per_page: 40,\n//         page,\n//         image_type:'photo',\n//         orientation:'horizontal',\n//         safesearch: true,\n//     })\n\n//     try {\n//         const response = await axios.get(`${BASE_URL}/?${params}`);\n//         return response.data;\n//     } catch (error) {\n//         error => showErrorNotification(error.message);\n//     }\n// }\n\n// function createGalleryMarkup(arr) {\n//     return arr.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => \n//     `\n//     <a href=\"${largeImageURL}\" class=\"photo-link\">\n//         <div class=\"photo-card\">\n//             <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"350\" height=\"225\"/>\n//         </div>\n//         <div class=\"info\">\n//             <p class=\"info-item\">\n//             <b>Likes</b>\n//             <span>${likes}</span>\n//             </p>\n//             <p class=\"info-item\">\n//             <b>Views</b>\n//             <span>${views}</span>\n//             </p>\n//             <p class=\"info-item\">\n//             <b>Comments</b>\n//             <span>${comments}</span>\n//             </p>\n//             <p class=\"info-item\">\n//             <b>Downloads</b>\n//             <span>${downloads}</span>\n//             </p>\n        \n//     </div>\n//     </a>\n\n//     `).join('')\n// }\n\n// function smoothScroll() {\n//     const { height: cardHeight } = galleryList.firstElementChild.getBoundingClientRect();\n//     console.log(galleryList.firstElementChild.getBoundingClientRect());\n    \n//     window.scrollBy({\n//         top: cardHeight * 2,\n//         behavior: \"smooth\",\n//     });\n// }\n\n// function imgModalInit() {\n//     const lightboxGallery = new SimpleLightbox('.gallery a');\n//     lightboxGallery.refresh();\n// }\n\n// function showLoadMoreErrorText() {\n//     loadMoreTextOutput.classList.remove('is-hidden');\n// }\n\n// function hideLoadMoreErrorText() {\n//     loadMoreTextOutput.classList.add('is-hidden');\n// }\n\n// function showLoadMoreBtn() {\n//     loadMoreBtn.classList.remove('is-hidden');\n// }\n\n// function hideLoadMoreBtn() {\n//     loadMoreBtn.classList.add('is-hidden');\n// }\n\n// function hideLoader() {\n//     loader.classList.add('is-hidden');\n// }\n\n// function showLoader() {\n//     loader.classList.remove('is-hidden');\n// }\n\n// function showErrorNotification(message) {\n//     Notiflix.Notify.failure(message)\n// }\n\n// function showSuccessNotification(message) {\n//     Notiflix.Notify.success(message);\n// }"],"names":["$bpxeT","parcelRequire","$d8c8e44fc8c8fdeb$var$searchForm","document","querySelector","$d8c8e44fc8c8fdeb$var$submitBtn","$d8c8e44fc8c8fdeb$var$galleryList","$d8c8e44fc8c8fdeb$var$loader","$d8c8e44fc8c8fdeb$var$loadMoreTextOutput","$d8c8e44fc8c8fdeb$var$target","$d8c8e44fc8c8fdeb$var$btnToTop","$d8c8e44fc8c8fdeb$var$BASE_URL","$d8c8e44fc8c8fdeb$var$API_KEY","$parcel$interopDefault","$6JpON","Notify","init","clickToClose","timeout","$d8c8e44fc8c8fdeb$var$searchQuery","$d8c8e44fc8c8fdeb$var$currentPage","$d8c8e44fc8c8fdeb$var$currentResults","$d8c8e44fc8c8fdeb$var$hideLoader","addEventListener","e","preventDefault","$d8c8e44fc8c8fdeb$var$hideLoadMoreErrorText","$d8c8e44fc8c8fdeb$var$showLoader","disabled","innerHTML","$d8c8e44fc8c8fdeb$var$fetchImg","elements","searchQuery","value","then","param","total","hits","totalHits","message","concat","success","length","$d8c8e44fc8c8fdeb$var$showLoadMoreErrorText","$d8c8e44fc8c8fdeb$var$createGalleryMarkup","$d8c8e44fc8c8fdeb$var$imgModalInit","scrollTarget","$d8c8e44fc8c8fdeb$var$observer","observe","$d8c8e44fc8c8fdeb$var$scrollObserver","$d8c8e44fc8c8fdeb$var$showErrorNotification","catch","error","finally","window","scrollTo","top","behavior","$d8c8e44fc8c8fdeb$var$hideScrollToTopBtn","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","insertAdjacentHTML","root","rootMargin","threshold","classList","remove","searchQuery1","page","$d8c8e44fc8c8fdeb$var$_fetchImg","apply","this","arguments","$2TvXO","mark","_callee","params","response","URLSearchParams","key","q","per_page","image_type","orientation","safesearch","$dIxxU","default","get","_ctx","sent","data","arr","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$5IjG7","refresh","add","failure"],"version":3,"file":"pixabay11.7c47d44a.js.map"}