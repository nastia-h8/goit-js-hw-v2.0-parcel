{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,cACpCC,EAAOF,SAASC,cAAc,YAEpCF,EAAWI,iBAAiB,UAE5B,SAAkBC,GACdA,EAAEC,iBAEF,IAAwBC,EAAAF,EAAEG,cAAcC,SAAhCC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,MAanB,SAAoBC,EAAMD,GAGtB,IACME,EAAU,kCAEhB,OAAOC,MAAM,GAAiCC,OAH7B,+BAGQ,uBAAkCA,OAAbF,EAAQ,OAAkBE,OAAbH,EAAK,UAAaG,OAALJ,IAEnEK,MAAK,SAAAC,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,YAGzB,OAAOH,EAAKI,M,KAxBpBC,CAAWZ,EAAMa,MAAOZ,EAAKY,OACxBP,MAAK,SAAAQ,GACFrB,EAAKsB,UAAyBD,EAAKE,SAASC,YAgCzCC,KAAI,SAAAC,G,IAAGC,EAAID,EAAJC,KAAIC,EAAAF,EAAEG,IAAOC,EAASF,EAATE,UAAWC,EAASH,EAATG,UAAWC,EAAWJ,EAAXI,YAAWC,EAAAL,EAAEM,UAAWC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,K,MAC/E,+BAC8BxB,OAAdwB,EAAK,WACXxB,OADoBuB,EAAK,0BAEzBvB,OADAe,EAAK,2BAEWf,OADhBuB,EAAK,2CAEWvB,OADAmB,EAAU,0CAEfnB,OADKkB,EAAU,qCACHlB,OAAZoB,EAAY,sB,IAE/BK,KAAK,G,IAvCNC,OAAM,SAACC,G,OAyBZC,EAAA7C,GAAS8C,OAAOC,QAAQ,0BACxB1C,EAAKsB,UAAY,G,IAzBZqB,SAAQ,WACL9C,EAAW+C,O","sources":["src/js/weather.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst searchForm = document.querySelector('.js-search');\nconst list = document.querySelector('.js-list');\n\nsearchForm.addEventListener('submit', onSearch)\n\nfunction onSearch(e) {\n    e.preventDefault();\n\n    const { query, days } = e.currentTarget.elements;\n\n    getWeather(query.value, days.value)\n        .then(data => {\n            list.innerHTML = createMarkup(data.forecast.forecastday);\n        })\n        .catch((error)=> onFetchError(error))\n        .finally(() => {\n            searchForm.reset();\n        });\n\n}\n\nfunction getWeather(city, days) {\n    // http://api.weatherapi.com/v1/forecast.json?key=48d371ffaffe42768b2122056231907&q=Kiev&days=5\n\n    const BASE_URL = 'http://api.weatherapi.com/v1';\n    const API_KEY = '48d371ffaffe42768b2122056231907';\n\n    return fetch(`${BASE_URL}/forecast.json?key=${API_KEY}&q=${city}&days=${days}`)\n        // &lang=uk\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText);\n            }\n\n            return resp.json();\n        })\n}\n\nfunction onFetchError(error) {\n    Notiflix.Notify.failure('Please, try again');\n    list.innerHTML = '';\n}\n\nfunction createMarkup(arr) {\n    return arr.map(({ date, day: { maxtemp_c, mintemp_c, maxwind_kph, condition:{text, icon}} }) => \n        `<li>\n            <img src=\"${icon}\" alt=\"${text}\" />\n            <h2>${date}</h2>\n            <h3>${text}</h3>\n            <p>Min temp,&#8451: ${mintemp_c}</p>\n            <p>Max temp,&#8451: ${maxtemp_c}</p>\n            <p>Wind, km/h: ${maxwind_kph}</p>\n        </li>`\n        ).join('');\n}\n\n"],"names":["$6JpON","parcelRequire","$b7c37e8f14632f7d$var$searchForm","document","querySelector","$b7c37e8f14632f7d$var$list","addEventListener","e","preventDefault","_elements","currentTarget","elements","query","days","city","API_KEY","fetch","concat","then","resp","ok","Error","statusText","json","$b7c37e8f14632f7d$var$getWeather","value","data","innerHTML","forecast","forecastday","map","param","date","_day","day","maxtemp_c","mintemp_c","maxwind_kph","_condition","condition","text","icon","join","catch","error","$parcel$interopDefault","Notify","failure","finally","reset"],"version":3,"file":"weather.e93e89d3.js.map"}