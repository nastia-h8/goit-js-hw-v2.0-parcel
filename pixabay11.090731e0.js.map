{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAKA,MAAMC,EAAaC,SAASC,cAAc,gBACpCC,EAAYH,EAAWE,cAAc,UACrCE,EAAcH,SAASC,cAAc,eACrCG,EAASJ,SAASC,cAAc,WAChCI,EAAqBL,SAASC,cAAc,yBAC5CK,EAASN,SAASC,cAAc,aAChCM,EAAWP,SAASC,cAAc,iBAkBxCO,EAAAC,GAASC,OAAOC,KAAK,CACjBC,cAAc,EACdC,QAAS,MAGb,IAAIC,EAAc,GACdC,EAAc,EACdC,EAAiB,EACrBC,IAEAlB,EAAWmB,iBAAiB,UAM5B,SAA2BC,GACvBA,EAAEC,iBACFC,IACAC,IAwJApB,EAAUqB,UAAW,EAtJrBpB,EAAYqB,UAAY,GAExBT,EAAc,EACdD,EAAcf,EAAW0B,SAASC,YAAYC,MAE9CC,EAASd,EAAaC,GACjBc,MAAK,EAACC,MAAEA,EAAKC,KAAEA,EAAIC,UAAEA,MAElB,IAAKF,EAED,YADAG,EAAsB,4EA4HtC,IAAiCC,IAzHO,oBAAoBF,YA0HxDxB,EAAAC,GAASC,OAAOyB,QAAQD,GAvHhBlB,EAAiBe,EAAKK,OAClBpB,IAAmBgB,GACnBK,IAGJtB,GAAe,EACfZ,EAAYqB,UAAYc,EAAoBP,GAC5CQ,IAEA,MAAMC,EAAexC,SAASC,cAAc,oBAC5CwC,EAASC,QAAQpC,GACjBqC,EAAeD,QAAQF,EAAa,IAEvCI,OAAMC,GAASZ,EAAsBY,KACrCC,SAAQ,KACL7B,IAoHRf,EAAUqB,UAAW,CAnHE,G,IAzC3BhB,EAASW,iBAAiB,SAmK1B,WACI6B,OAAOC,SAAS,CAChBC,IAAK,EACLC,SAAU,WAGVC,G,IAxKJ,MAAMV,EAAW,IAAIW,sBAkJrB,SAAkBC,GACdA,EAAQC,SAAQC,IACRA,EAAMC,iBAvGdnC,IACAC,IAEAM,EAASd,EAAaC,GACjBc,MAAK,EAACE,KAAEA,EAAIC,UAAEA,MAEXjB,GAAe,EACfC,GAAkBe,EAAKK,OAEnBpB,IAAmBgB,IACnBS,EAASgB,UAAUnD,GACnB+B,KAGJlC,EAAYuD,mBAAmB,YAAapB,EAAoBP,IAChEQ,GAAc,IAGjBK,OAAMC,GAASZ,EAAsBY,KACrCC,QAAQ7B,GAqFO,G,GA7KA,CACpB0C,KAAM,KACNC,WAAY,QACZC,UAAW,IAsBTlB,EAAiB,IAAIS,sBAkL3B,SAAuBC,GACdA,EAAQ,GAAGG,eAGZL,IAXJ5C,EAASuD,UAAUC,OAAO,Y,GA9LA,CAC1BJ,KAAM,KACNC,WAAY,QACZC,UAAW,IAmFfG,eAAepC,EAASqC,EAAaC,GACjC,MAAMC,EAAS,IAAIC,gBAAgB,CAC/BC,IAjGQ,qCAkGRC,EAAGL,EACHM,SAAU,G,KACVL,EACAM,WAAW,QACXC,YAAY,aACZC,YAAY,IAGhB,IAEI,aADuBC,EAAAC,QAAMC,IAAI,6BAAgBV,MACjCW,I,CAClB,MAAOC,G,EAKb,SAASzC,EAAoB0C,GACzB,OAAOA,EAAIC,KAAI,EAACC,aAACA,EAAYC,cAAEA,EAAaC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAC5E,kBACWL,oGAESD,WAAsBE,4KAK1BC,8GAIAC,iHAIAC,kHAIAC,uEAMbC,KAAK,G,CAGZ,SAASlD,IACmB,IAAI/B,EAAAX,GAAJ,CAAmB,cAAc6F,S,CAG7D,SAASrD,IACLhC,EAAmByD,UAAUC,OAAO,Y,CAGxC,SAAS1C,IACLhB,EAAmByD,UAAU6B,IAAI,Y,CAGrC,SAAS1E,IACLb,EAAO0D,UAAU6B,IAAI,Y,CAGzB,SAASrE,IACLlB,EAAO0D,UAAUC,OAAO,Y,CAG5B,SAAS9B,EAAsBC,GAC3B1B,EAAAC,GAASC,OAAOkF,QAAQ1D,E,CAoC5B,SAASiB,IACL5C,EAASuD,UAAU6B,IAAI,Y","sources":["src/js/pixabay11.js"],"sourcesContent":["import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport Notiflix from 'notiflix';\nimport axios from \"axios\";\n\nconst searchForm = document.querySelector('#search-form');\nconst submitBtn = searchForm.querySelector('button');\nconst galleryList = document.querySelector('.js-gallery');\nconst loader = document.querySelector('.loader');\nconst loadMoreTextOutput = document.querySelector('.js-load-more-wrapper');\nconst target = document.querySelector('.js-guard');\nconst btnToTop = document.querySelector('.js-button-up');\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '38382383-be68f6f97c97ff697813dafa9';\n\n\nconst observerOptions = {\n    root: null,\n    rootMargin: '200px',\n    threshold: 1.0\n}\n\nconst scrollObserverOptions = {\n    root: null,\n    rootMargin: '200px',\n    threshold: 1.0\n}\n\nNotiflix.Notify.init({\n    clickToClose: true,\n    timeout: 2000,\n})\n\nlet searchQuery = \"\";\nlet currentPage = 1;\nlet currentResults = 0;\nhideLoader();\n\nsearchForm.addEventListener('submit', handlerSearchForm);\nbtnToTop.addEventListener('click', handlerReturnToTop)\nconst observer = new IntersectionObserver(observe, observerOptions);\nconst scrollObserver = new IntersectionObserver(scrollObserve, scrollObserverOptions);\n\n\nfunction handlerSearchForm(e) {\n    e.preventDefault();\n    hideLoadMoreErrorText();\n    showLoader();\n    hideSubmitBtn();\n    galleryList.innerHTML = \"\";\n\n    currentPage = 1;\n    searchQuery = searchForm.elements.searchQuery.value;\n\n    fetchImg(searchQuery, currentPage)\n        .then(({ total, hits, totalHits }) => {\n\n            if (!total) {\n                showErrorNotification('Sorry, there are no images matching your search query. Please try again.')\n                return;\n            } else {\n                showSuccessNotification(`Hooray! We found ${totalHits} images.`)\n            }\n\n            currentResults = hits.length;\n            if (currentResults === totalHits) {\n                showLoadMoreErrorText();\n                } \n                \n            currentPage += 1;\n            galleryList.innerHTML = createGalleryMarkup(hits);\n            imgModalInit();\n            \n            const scrollTarget = document.querySelector('.js-scroll-guard');\n            observer.observe(target);\n            scrollObserver.observe(scrollTarget);\n        })\n        .catch(error => showErrorNotification(error))\n        .finally(()=>{\n            hideLoader();\n            showSubmitBtn();\n        })\n}\n\nfunction onLoadMore() {\n    hideLoadMoreErrorText();\n    showLoader();\n\n    fetchImg(searchQuery, currentPage)\n        .then(({ hits, totalHits }) => {\n            \n            currentPage += 1;\n            currentResults += hits.length;\n\n            if (currentResults === totalHits) {\n                observer.unobserve(target);\n                showLoadMoreErrorText();\n            }\n            \n            galleryList.insertAdjacentHTML('beforeend', createGalleryMarkup(hits));\n            imgModalInit();\n            \n        })\n        .catch(error => showErrorNotification(error))\n        .finally(hideLoader)\n}\n\n\nasync function fetchImg(searchQuery, page) {\n    const params = new URLSearchParams({\n        key:API_KEY,\n        q: searchQuery,\n        per_page: 40,\n        page,\n        image_type:'photo',\n        orientation:'horizontal',\n        safesearch: true,\n    })\n\n    try {\n        const response = await axios.get(`${BASE_URL}/?${params}`);\n        return response.data;\n    } catch (error) {\n        error => showErrorNotification(error.message);\n    }\n}\n\nfunction createGalleryMarkup(arr) {\n    return arr.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => \n    `\n    <a href=\"${largeImageURL}\" class=\"photo-link js-scroll-guard\" >\n        <div class=\"photo-card\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"350\" height=\"225\"/>\n        </div>\n        <div class=\"info\">\n            <p class=\"info-item\">\n            <b>Likes</b>\n            <span>${likes}</span>\n            </p>\n            <p class=\"info-item\">\n            <b>Views</b>\n            <span>${views}</span>\n            </p>\n            <p class=\"info-item\">\n            <b>Comments</b>\n            <span>${comments}</span>\n            </p>\n            <p class=\"info-item\">\n            <b>Downloads</b>\n            <span>${downloads}</span>\n            </p>\n        \n    </div>\n    </a>\n\n    `).join('')\n}\n\nfunction imgModalInit() {\n    const lightboxGallery = new SimpleLightbox('.gallery a').refresh();\n}\n\nfunction showLoadMoreErrorText() {\n    loadMoreTextOutput.classList.remove('is-hidden');\n}\n\nfunction hideLoadMoreErrorText() {\n    loadMoreTextOutput.classList.add('is-hidden');\n}\n\nfunction hideLoader() {\n    loader.classList.add('is-hidden');\n}\n\nfunction showLoader() {\n    loader.classList.remove('is-hidden');\n}\n\nfunction showErrorNotification(message) {\n    Notiflix.Notify.failure(message)\n}\n\nfunction showSuccessNotification(message) {\n    Notiflix.Notify.success(message);\n}\n\nfunction observe (entries) {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            onLoadMore()\n        }\n     })\n};\n\nfunction showSubmitBtn() {\n    submitBtn.disabled = false;\n}\n\nfunction hideSubmitBtn() {\n    submitBtn.disabled = true;\n}\n\nfunction handlerReturnToTop() {\n    window.scrollTo({\n    top: 0,\n    behavior: 'smooth'\n    });\n    \n    hideScrollToTopBtn()\n}\n\nfunction showScrollToTopBtn() {\n    btnToTop.classList.remove('is-hidden');\n}\n\nfunction hideScrollToTopBtn() {\n    btnToTop.classList.add('is-hidden')\n}\n\nfunction scrollObserve(entries) {\n    if (!entries[0].isIntersecting) {\n        showScrollToTopBtn()\n    } else {\n        hideScrollToTopBtn()\n    }\n};\n\n// LOAD MORE BTN ------------------------------------------------------------------------------------------------\n\n// import SimpleLightbox from \"simplelightbox\";\n// import \"simplelightbox/dist/simple-lightbox.min.css\";\n// import Notiflix from 'notiflix';\n// import axios from \"axios\";\n\n// Notiflix.Notify.init({\n//     clickToClose: true,\n//     timeout: 2000,\n// })\n\n\n// const searchForm = document.querySelector('#search-form');\n// const galleryList = document.querySelector('.js-gallery');\n// const loader = document.querySelector('.loader');\n// const loadMoreBtn = document.querySelector('.js-load-more');\n// const loadMoreTextOutput = document.querySelector('.js-load-more-text');\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '38382383-be68f6f97c97ff697813dafa9';\n\n\n// let searchQuery = \"\";\n// let currentPage = 1;\n// let allHits = 0;\n// hideLoader();\n\n// searchForm.addEventListener('submit', handlerSearchForm);\n// loadMoreBtn.addEventListener('click', handlerLoadMore);\n\n\n// function handlerSearchForm(e) {\n//     e.preventDefault();\n//     hideLoadMoreErrorText();\n//     showLoader();\n//     galleryList.innerHTML = \"\";\n\n//     currentPage = 1;\n//     searchQuery = searchForm.elements.searchQuery.value;\n\n//     fetchImg(searchQuery, currentPage)\n//         .then(({ total, hits, totalHits }) => {\n\n//             if (!total) {\n//                 hideLoadMoreBtn();\n//                 showErrorNotification('Sorry, there are no images matching your search query. Please try again.')\n//                 return;\n//             } else {\n//                 showSuccessNotification(`Hooray! We found ${totalHits} images.`)\n\n//             allHits = hits.length;\n//             if (allHits === totalHits) {\n//                 hideLoadMoreBtn()\n//                 showLoadMoreErrorText();\n//             } else {\n//                 showLoadMoreBtn()\n//             }\n//         }\n            \n//             currentPage += 1;\n\n//             galleryList.innerHTML = createGalleryMarkup(hits);\n//             imgModalInit()\n\n//         })\n//         .catch(error => showErrorNotification(error))\n//         .finally(hideLoader)\n// }\n\n// function handlerLoadMore() {\n//     hideLoadMoreErrorText();\n//     showLoader();\n\n//     fetchImg(searchQuery, currentPage)\n//         .then(({ hits, totalHits }) => {\n            \n//             currentPage += 1;\n//             allHits += hits.length;\n\n//             if (allHits === totalHits ) {\n//                 hideLoadMoreBtn()\n//                 showLoadMoreErrorText();\n//             }\n            \n\n//             galleryList.insertAdjacentHTML('beforeend', createGalleryMarkup(hits));\n//             smoothScroll()\n//             imgModalInit()\n            \n//         })\n//         .catch(error => showErrorNotification(error))\n//         .finally(hideLoader)\n// }\n\n\n// async function fetchImg(searchQuery, page) {\n//     const params = new URLSearchParams({\n//         key:API_KEY,\n//         q: searchQuery,\n//         per_page: 40,\n//         page,\n//         image_type:'photo',\n//         orientation:'horizontal',\n//         safesearch: true,\n//     })\n\n//     try {\n//         const response = await axios.get(`${BASE_URL}/?${params}`);\n//         return response.data;\n//     } catch (error) {\n//         error => showErrorNotification(error.message);\n//     }\n// }\n\n// function createGalleryMarkup(arr) {\n//     return arr.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => \n//     `\n//     <a href=\"${largeImageURL}\" class=\"photo-link\">\n//         <div class=\"photo-card\">\n//             <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=\"350\" height=\"225\"/>\n//         </div>\n//         <div class=\"info\">\n//             <p class=\"info-item\">\n//             <b>Likes</b>\n//             <span>${likes}</span>\n//             </p>\n//             <p class=\"info-item\">\n//             <b>Views</b>\n//             <span>${views}</span>\n//             </p>\n//             <p class=\"info-item\">\n//             <b>Comments</b>\n//             <span>${comments}</span>\n//             </p>\n//             <p class=\"info-item\">\n//             <b>Downloads</b>\n//             <span>${downloads}</span>\n//             </p>\n        \n//     </div>\n//     </a>\n\n//     `).join('')\n// }\n\n// function smoothScroll() {\n//     const { height: cardHeight } = galleryList.firstElementChild.getBoundingClientRect();\n//     console.log(galleryList.firstElementChild.getBoundingClientRect());\n    \n//     window.scrollBy({\n//         top: cardHeight * 2,\n//         behavior: \"smooth\",\n//     });\n// }\n\n// function imgModalInit() {\n//     const lightboxGallery = new SimpleLightbox('.gallery a');\n//     lightboxGallery.refresh();\n// }\n\n// function showLoadMoreErrorText() {\n//     loadMoreTextOutput.classList.remove('is-hidden');\n// }\n\n// function hideLoadMoreErrorText() {\n//     loadMoreTextOutput.classList.add('is-hidden');\n// }\n\n// function showLoadMoreBtn() {\n//     loadMoreBtn.classList.remove('is-hidden');\n// }\n\n// function hideLoadMoreBtn() {\n//     loadMoreBtn.classList.add('is-hidden');\n// }\n\n// function hideLoader() {\n//     loader.classList.add('is-hidden');\n// }\n\n// function showLoader() {\n//     loader.classList.remove('is-hidden');\n// }\n\n// function showErrorNotification(message) {\n//     Notiflix.Notify.failure(message)\n// }\n\n// function showSuccessNotification(message) {\n//     Notiflix.Notify.success(message);\n// }"],"names":["$fZKcF","parcelRequire","$066e4db432994326$var$searchForm","document","querySelector","$066e4db432994326$var$submitBtn","$066e4db432994326$var$galleryList","$066e4db432994326$var$loader","$066e4db432994326$var$loadMoreTextOutput","$066e4db432994326$var$target","$066e4db432994326$var$btnToTop","$parcel$interopDefault","$7Y9D8","Notify","init","clickToClose","timeout","$066e4db432994326$var$searchQuery","$066e4db432994326$var$currentPage","$066e4db432994326$var$currentResults","$066e4db432994326$var$hideLoader","addEventListener","e","preventDefault","$066e4db432994326$var$hideLoadMoreErrorText","$066e4db432994326$var$showLoader","disabled","innerHTML","elements","searchQuery","value","$066e4db432994326$var$fetchImg","then","total","hits","totalHits","$066e4db432994326$var$showErrorNotification","message","success","length","$066e4db432994326$var$showLoadMoreErrorText","$066e4db432994326$var$createGalleryMarkup","$066e4db432994326$var$imgModalInit","scrollTarget","$066e4db432994326$var$observer","observe","$066e4db432994326$var$scrollObserver","catch","error","finally","window","scrollTo","top","behavior","$066e4db432994326$var$hideScrollToTopBtn","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","insertAdjacentHTML","root","rootMargin","threshold","classList","remove","async","searchQuery1","page","params","URLSearchParams","key","q","per_page","image_type","orientation","safesearch","$2shzp","default","get","data","error1","arr","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","refresh","add","failure"],"version":3,"file":"pixabay11.090731e0.js.map"}